version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - rag_network

  backend:
    build: ./backend
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_ENV=production
    volumes:
      - ./backend:/app  # Mount backend code for live updates
    networks:
      - rag_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  airflow:
    build: ./dags
    container_name: airflow
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    networks:
      - rag_network



  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "8501:8501"
    depends_on:
      backend:
        condition: service_healthy  # Wait for backend
    volumes:
      - ./frontend:/app  # Mount frontend code
    networks:
      - rag_network

networks:
  rag_network:
    driver: bridge
